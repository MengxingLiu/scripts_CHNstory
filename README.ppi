
# ===========================================================================
# This README file shows how to walk through this sample PPI analysis.
# 
# This README file is also a script that can be simply run, or perferably
# cut-and-pasted slowly onto a command line (to review the process).
# 
# This should be run after you finished the preproc piplines.
#
# For example, consider doing the initial analysis by running:
# 
#    tcsh preproc.1.proc sub32
#
# which puts results under ./sub32.results
#
# The project directory tree is like this:
# 
# main directory: ./CHNstory
# old data and freesurfer: ./CHNstory/story2016fMRI
# scripts: ./CHNstory/scripts_CHNstory
# preprocessed dat: ./CHNstory/data/
# group level results: ./CHNstory/analysis
#
# Then one can apply this script (assuming the main directories are correct).
#
# ----------------------
#  MENGXING LIU  April, 2019
# ===========================================================================


# note location of scripts and data
set scriptdir = `pwd`
set data_dir   = ../data/

# the user may specify a single subject to run with
if ($#argv > 0 ) then
    set subj = $argv[1]
else
    set subj = sub02
endif

# verify existence of things
if ( ! -f ppi.1.proc.3dd.pre ) then
   echo "** must be run from ./scripts_CHNstory/"
   exit 1
endif

if ( ! -d $data_dir ) then
   echo "** missing subject results directory $data_dir"
   exit 1
endif


# ----------------------------------------
# do all of the work in the $subjdir.results directory...

set subjdir = ../data/$subj.results
cd $subjdir


# ===========================================================================
# optional section: generate seed time series

# ----------------------------------------
# create errts time series, ppi.pre.errts.FT+tlrc
# (to be run from results)
tcsh ppi.1.proc.3dd.pre


# ----------------------------------------
# generate seed time series, ppi.seed."$ROI".1D for each ROI
tcsh ppi.roiSelect.bash


set ROIlabel = ("inf_Occipital" "parsOper" "parsOrbi" \
            "parsTrian" "mid_Frontal" "Fusiform" \
            "mid_Temp" "Pole_Temp" "AngularG")

# ===========================================================================
# generate PPI regressors from seed and timing files
# (script uses 'set seed = ppi.seed.$ROI.1D')
foreach ROI ($ROIlabel)
	tcsh $scriptdir/cmd.ppi.2.make.regs sub02 $ROI
end

# and just to see consider:
#    1dplot -one ppi.seed.1D work.Laud/p7.Laud.sum.PPI.1D
#    1dplot ppi.seed.1D work.Laud/p6.*


# ===========================================================================
# create and run a 3dDeconvolve command for the PPI
# (still run from $subjdir)

# create the 3dDeconvolve command, proc.3dd.ppi.post.full
tcsh $scriptdir/cmd.ppi.3.ap.post

# and run it
tcsh proc.3dd.ppi.post.full



# ===========================================================================
# comments...

# - this data is not designed to capture a PPI effect
# - the results are in PPI.full.stats.FT+tlrc
# - looking at the PPI volume #20 (PPI:V-A_GLT#0_Tstat), and clustering
#   at a threshold of 3.314 (p<0.001), min volume of 20 voxels (just to see),
#   cluster #6 (peak t at 29 84 14) _might_ be interesting (see all_runs plot)
# - cluster #1 looks like a simple motion effect
